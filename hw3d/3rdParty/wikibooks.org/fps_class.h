#pragma once
////////////////////////////////////////////////////////////////////////////////
// Filename: fps_class.h
////////////////////////////////////////////////////////////////////////////////
#pragma once

/////////////
// LINKING //
/////////////
#pragma comment(lib, "winmm.lib")

//////////////
// INCLUDES //
//////////////
#include <windows.h>
#include <mmsystem.h>

////////////////////////////////////////////////////////////////////////////////
// Class name: fps_class
////////////////////////////////////////////////////////////////////////////////
class fps_class
{
public:
	fps_class() = default;
	~fps_class() = default;
	fps_class(const fps_class&) = delete;
	fps_class& operator=(const fps_class&) = delete;
	fps_class(const fps_class&&) = delete;
	fps_class& operator=(const fps_class&&) = delete;

	void initialize();
	void frame();
	[[nodiscard]] int get_fps() const;

private:
	int fps_, count_;
	unsigned long start_time_;
};
